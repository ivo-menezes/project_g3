@startuml
!theme plain
autonumber
hide footbox
title "US018 - As Product Owner/Scrum Master/Team Member, I want to consult the product backlog, \n i.e. to get the list of user stories sorted by priority."

actor "Product Owner/\n/Scrum Master/\n/Team Member" as user
participant ": ConsultProductBacklogUI" as UI
participant ": ConsultProductBacklogController" as Controller
participant ": UserStoryService" as Service
participant ": ProjectRepository" as ProjRepository
participant "project : Project" as Project
participant "productBacklog : ProductBacklog" as backlog
participant "openUserStoryList :\n List<UserStory>" as USList
participant ": UserStoryRepository" as USRepository
participant "DATA : HashMap" as hashmap
participant ": UserStoryMapper" as Mapper
participant "productBacklog :\n List<UserStoryDTO>" as DTOList
participant "openUserStoryIDs: List<UserStoryID>"

activate user #FFBBBB
user -> UI: Requests product backlog(projectCode)

activate UI #FFBBBB
UI-> Controller:getProductBacklog(projectCode)

activate Controller #FFBBBB
Controller -> Service: getProductBacklog(projectCode)
activate Service #FFBBBB

Service --> "projectCodeVO : ProjectCode" **: create(projectCode)
Service -> ProjRepository: getByID(projectCodeVO)
activate ProjRepository #FFBBBB
ProjRepository --> Service: project
deactivate ProjRepository
Service -> Project : getProductBacklog()

activate Project #FFBBBB
Project -> backlog : getOpenUserStoryIDs()
activate backlog #FFBBBB
backlog -> Project: openUserStoryIDs
deactivate backlog

Project --> Service: openUserStoryIDs
deactivate Project
Service --> USList ** : create

loop for each userStoryID in openUserStoryIDs
Service -> USRepository: containsID(id)
activate USRepository #FFBBBB
USRepository -> hashmap: containsKey(id)
activate hashmap #FFBBBB
hashmap --> USRepository: true
USRepository--> Service: true
Service -> USRepository: getByID(id)
USRepository -> hashmap: get(id)
hashmap --> USRepository: userStory
deactivate hashmap
USRepository --> Service: userStory
deactivate USRepository
Service -> USList: add(userStory)
activate USList #FFBBBB
deactivate USList
end


Service -> Mapper: toDTOList(openUserStoryList)
activate Mapper #FFBBBB

Mapper --> DTOList ** : create

loop for each userStory in openUserStoryList
Mapper -> Mapper : toDTO(userStory)
Mapper -> DTOList: add(userStoryDTO)
activate DTOList #FFBBBB
deactivate DTOList
end

Mapper --> Service : productBacklog
deactivate Mapper

Service --> Controller : productBacklog
deactivate Service

Controller --> UI: productBacklog
deactivate Controller

UI --> user: Displays product backlog
deactivate UI

@enduml