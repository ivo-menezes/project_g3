@startuml
!theme plain
hide footbox
autonumber

Actor Manager
participant ": AssociateResourceUI" as UI
participant "resourceDTO:ResourceDTO" as dto
participant ": ResourceController" as Controller
participant ": ResourceService" as Services
participant ": AccountRepository" as AccountRepository
participant ": AccountRepositoryJPA" as AccountRepositoryJPA
participant "account : Account" as account
participant ": ProjectRepository" as ProjectRepository
participant ": ProjectRepositoryJPA" as ProjectRepositoryJPA
participant ": ResourceRepository" as ResourceRepository
participant ": ResourceRepositoryJPA" as ResourceRepositoryJPA
participant ": factoryResource : FactoryResourceImpl" as Factory
participant "resource : Resource" as resource
participant ": AssemblerData" as AssemblerData

activate Manager #FFBBBB
Manager -> UI : Defines user as PO of project\n (email, role, projectCode, startDate, endDate,\n percentAllocation, costPerHour)

activate UI #FFBBBB
UI --> dto ** : create(email, role, projectCode,startDate,\n endDate, percentAllocation, costPerHour)
UI -> Controller : createResource(resourceDTO)
activate Controller #FFBBBB
Controller -> Services : createResource(resourceDTO)

activate Services #FFBBBB

Services --> "resourceID : ResourceID" **: createID()
Services --> "email : Email" **: create(resourceDTO.email)
Services --> "role : Role" **: create(resourceDTO.role)
Services --> "projectCode : ProjectCode" **: create(resourceDTO.projectCode)
Services --> "timePeriod : TimePeriod" **: create(resourceDTO.timePeriod)
Services --> "percentageAllocation : PercentageAllocation" **: create(resourceDTO.percentageAllocation)
Services --> "costPerHour : CostPerHour" **: create(resourceDTO.costPerHour)


Services -> AccountRepository : getByID(email)
activate AccountRepository #FFBBBB

AccountRepository --> Services : Account
deactivate AccountRepository


Services -> account : isUser()
activate account #FFBBBB
account --> Services : true
deactivate account

Services -> ProjectRepository : Contains(projectCode)
activate ProjectRepository #FFBBBB
ProjectRepository --> Services : true
deactivate ProjectRepository

Services -> ResourceRepository: existsActiveResourceWithAccount(email, projectCode, timePeriod)
activate ResourceRepository #FFBBBB
ResourceRepository --> Services: false
deactivate ResourceRepository

Services -> ResourceRepository: isRoleOccupied(projectCode, role, timePeriod)
activate ResourceRepository #FFBBBB
deactivate ResourceRepositoryJPA

ResourceRepository --> Services: false
deactivate ResourceRepository


Services -> Factory: createResource(resourceID, email, role, projectCode, timePeriod, percentAllocation, costPerHour)
activate Factory #FFBBBB
Factory --> resource ** : createResource(resourceID, email, roleName,\n projectCode, timePeriod, percentAllocation, costPerHour)
Factory --> Services: resource
deactivate Factory

Services -> ResourceRepository : save(resource)
activate ResourceRepository #FFBBBB
ResourceRepository -> ResourceRepositoryJPA : toData(resource)
activate ResourceRepositoryJPA #FFBBBB
ResourceRepositoryJPA --> ResourceRepository : resourceJPA
deactivate ResourceRepositoryJPA
ResourceRepository -> AssemblerData : save(resourceJPA)
activate AssemblerData #FFBBBB
AssemblerData --> ResourceRepository : savedResourceJPA
deactivate AssemblerData
ResourceRepository -> ResourceRepositoryJPA: toDomain(savedResourceJPA)
activate ResourceRepositoryJPA #FFBBBB
ResourceRepositoryJPA --> ResourceRepository : savedResource
deactivate ResourceRepositoryJPA
ResourceRepository -> Services : true
deactivate ResourceRepository
Services --> Controller : true
deactivate Services
Controller --> UI: true
deactivate Controller

UI --> Manager : confirm
deactivate UI

deactivate Manager

@enduml