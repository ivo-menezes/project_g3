@startuml
!theme plain
hide footbox
autonumber

skinparam sequence{
LifeLineBackgroundColor #FFBBBB
}

title US017 - As Product Owner, I want to create a user story and add it to the Product Backlog


participant ": UserStoryService" as service
participant " : IUserStoryFactory" as factory
participant "userStory : UserStory" as userStory
participant ": ProjectRepository" as projectRepository
participant " :UserStoryRepository" as usRepository
participant " : UserStoryJpaRepository" as jpa
participant " : UserStoryDataDomainAssembler" as assembler
participant "userStoryJpa : UserStoryJpa" as userStoryJpa
participant "savedUserStory : UserStory" as savedUserStory
participant "project : Project" as project
participant "productBacklog : ProductBacklog" as backlog
participant "openUserStories : List<UserStoryID>" as uslist

activate service
-> service : createUserStory(newUserStoryDTO)

service -> factory : createUserStory(newUserStoryDTO)
activate factory
ref over factory: US017_CreateUserStorySD3\n(creation of user story)
factory --> service :userStory
deactivate

service -> userStory : getProjectCode();
activate userStory
userStory --> service : projectCode
deactivate

service -> projectRepository: getByID(projectCode)

activate projectRepository
ref over projectRepository : US017_CreateUserStorySD4\n(retrieve project from projectRepository)
projectRepository --> service: project
deactivate




service -> usRepository :save(userStory)

activate usRepository
usRepository -> userStory : identity()

activate userStory
userStory --> usRepository: userStoryID
deactivate

usRepository -> usRepository : containsID(userStoryID)
activate usRepository #DarkSalmon

usRepository -> jpa :existsById(userStoryID)

activate jpa
jpa --> usRepository : false
deactivate
deactivate

usRepository -> assembler : toData(userStory)

activate assembler
assembler --> userStoryJpa ** : create
assembler --> usRepository : userStoryJpa
deactivate

usRepository -> jpa : save(userStoryJpa)

activate jpa
'jpa --> savedUserStoryJpa ** : create
jpa --> usRepository : savedUserStoryJpa
deactivate

usRepository -> assembler : toDomain(savedUserStoryJpa)
activate assembler
assembler --> savedUserStory ** : create
assembler --> usRepository : savedUserStory
deactivate

usRepository --> service: savedUserStory
deactivate

service -> project :addToProductBacklog(userStoryID, priority)

activate project
project -> backlog: addUserStory(userStoryID, priority)

activate backlog
backlog -> uslist : contains(userStoryID)

activate uslist
uslist --> backlog : false
deactivate

backlog -> uslist : add(priority, userStoryID)
activate uslist
deactivate

backlog --> project : true
deactivate

project --> service : true
deactivate

service -> projectRepository : save(project)
activate projectRepository
ref over projectRepository : US017_CreateUserStorySD5\n(save project in projectRepository)
projectRepository --> service : savedProject
deactivate

[<-- service : savedUserStory
@enduml