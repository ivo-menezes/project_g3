@startuml
!theme plain
hide footbox
autonumber

skinparam sequence{
LifeLineBackgroundColor #FFBBBB
}

title US017 - As Product Owner, I want to create a user story and add it to the Product Backlog


participant ": UserStoryService" as service
participant " : IUserStoryFactory" as factory
participant "newUserStory : UserStory" as newUserStory
participant ": IProjectRepository" as projectRepository
participant " : IUserStoryRepository" as usRepository
participant "domaintDto : NewUserStoryInfoDto" as inDto
participant "savedUserStory : UserStory" as savedUserStory
participant ": NewUserStoryInfoDtoMapper" as mapper
participant "savedUserStoryDto : NewUserStoryInfoDto" as outDto
participant "project : Project" as project
participant "productBacklog : ProductBacklog" as backlog
participant "openUserStories : List<UserStoryID>" as uslist

activate service
-> service : createUserStory(domainDto)

service -> factory : createUserStory(domainDto)
activate factory
ref over factory: US017_CreateUserStorySD3\n(creation of user story)
factory --> service :newUserStory
deactivate

service -> newUserStory : identity().getProjectCode();
activate newUserStory
newUserStory --> service : projectCode
deactivate

service -> projectRepository: getByID(projectCode)

activate projectRepository
projectRepository --> service: project
deactivate

service -> usRepository :save(newUserStory)
activate usRepository
ref over usRepository : US017_CreateUserStorySD4\n(saving of user story)
usRepository --> savedUserStory ** : create
usRepository --> service: savedUserStory
deactivate

service -> mapper : toDto(savedUserStory)
activate mapper
mapper --> outDto ** : create
mapper --> service : savedUserStoryDto
deactivate

service -> newUserStory : identity()
activate newUserStory
newUserStory --> service : userStoryID
deactivate

service -> inDto : .priority
activate inDto
inDto --> service : priority
deactivate

service -> project :addToProductBacklog(userStoryID, priority)

activate project
project -> backlog: addUserStory(userStoryID, priority)

activate backlog
backlog -> uslist : contains(userStoryID)

activate uslist
uslist --> backlog : false
deactivate

backlog -> uslist : add(priority, userStoryID)
activate uslist
deactivate

backlog --> project : attributedPriority
deactivate

project --> service : attributedPriority
deactivate

service -> projectRepository : replace(project)
activate projectRepository
projectRepository --> service : replacedProject
deactivate

[<-- service : savedUserStoryDto
@enduml