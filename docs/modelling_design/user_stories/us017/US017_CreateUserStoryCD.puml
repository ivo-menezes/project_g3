@startuml

class CreateUserStoryController {
projectList : ProjectList
createUserStory(projectCode, userStoryDTO, priority)
}

class ProjectList {
projectList : List<Project>
getProject(projectCode)
}

class Project {
code : Integer
name : String
customer : String
startDate : Date
endDate : Date
status : String
productBacklog : ProductBacklog
}

class ProductBacklog {
userStories: List<UserStory>
completedUserStories : List<UserStory>
factoryUserStory : IFactoryUserStory
mapper : UserStoryMapper
createUserStoryFromDTO(userStoryDTO)
createAndAddUserStory(userStoryDTO, priority)
doesNotContain(userStory)
add(userStory, priority)
}

class FactoryUserStoryImpl {
createUserStory(id, actor, text, acceptanceCriteria)
}

interface IFactoryUserStory {
createUserStory(id, actor, text, acceptanceCriteria)
}

class UserStory {
id : String
actor : String
text : String
acceptanceCriteria : String
status : String
}

class UserStoryMapper {
fromDTO(UserStoryDTO)
}

class UserStoryDTO {
id : String
actor : String
text : String
acceptanceCriteria : String
}

CreateUserStoryController "1" o-- "1" ProjectList
CreateUserStoryController ..> UserStoryDTO
CreateUserStoryController ..> Project
CreateUserStoryController ..> ProductBacklog
ProductBacklog ..> UserStoryDTO
ProjectList "      1" *-- "                    *" Project
Project "1" o-- "1" ProductBacklog
ProductBacklog "1" *-- "*" UserStory
ProductBacklog "1" o-- "1" UserStoryMapper
UserStoryMapper ..> UserStoryDTO
FactoryUserStoryImpl  ..|> IFactoryUserStory
ProductBacklog "1" o-- "1" FactoryUserStoryImpl
FactoryUserStoryImpl ..> UserStory

@enduml