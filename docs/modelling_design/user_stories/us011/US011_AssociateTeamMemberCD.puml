@startuml
!theme plain

class AssociateResourceUI {
}

class AssociateResourceController {
accountList: AccountList
roleList: RoleList
projectList: ProjectList
addResource(resourceDTO)


}

class AccountList {
getAccount(account)
}

class Account {
profile: Profile
isUser()
}

class RoleList {
roleList: List<Role>
getRole(roleName)
}

class Role {
description: String
}

class ProjectList {
projectList: List<Project>
addResourceToProject(account, role, resourceDTO)
getProject(projectCode)
}

class Project {
code: int
name: String
description: String
startDate: Date
endDate: Date
IDCustomer: Int
sprintDuration: int
numberOfPlannedSprints: int
projectStatus: String ???
budget: double
resourceList: ResourceList
addResource(account, role, resourceDTO)
}

class ResourceList {
resourceList: List<Resource>
+addResource(account, role, resourceDTO)
-existsActiveResourceWithAccount(account)
}

class Resource {
role: Role
account: Account
startDate: Date
endDate: Date
percentAllocation: double
costPerHour: double
isAccountOfResource(account)

}

AssociateResourceUI o-- AssociateResourceController
AssociateResourceController o-- ProjectList
ProjectList *-- Project
Project *-- ResourceList
ResourceList o-- Resource
AccountList *-- Account
RoleList *-- Role
AssociateResourceController o-- AccountList
AssociateResourceController ..> Account
AssociateResourceController o-- RoleList
Resource o-- Account
Resource o-- Role
@enduml